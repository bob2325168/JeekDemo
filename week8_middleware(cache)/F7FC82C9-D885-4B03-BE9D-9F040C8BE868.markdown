# 1.使用 redis benchmark 工具, 测试 10 20 50 100 200 1k 5k 字节 value 大小，redis get set 性能


![](i/813a66ec-380d-4a18-b553-c8e27d4b04a9.png)


![](i/48feff76-0660-4699-9749-5be726bd3f4f.png)


![](i/699ab7f7-2ccb-4f6d-a247-656f19197e79.png)


![](i/78f31f76-682c-4605-bab1-9b39e4c47bfe.png)


![](i/42c273b1-ecba-48e3-9177-d38beb57f571.png)


![](i/a6d54e64-6abf-4eab-a450-747a3d0fc1ec.png)


* 从10-1000的区间上来看，每秒是在50000左右的request，但是从1000以后瞬间下降至25000左右的request。可见，性能下降一半左右，对性能影响挺大。


# 2.写入一定量的 kv 数据, 根据数据大小 1w-50w 自己评估, 结合写入前后的 info memory 信息 , 分析上述不同 value 大小下，平均每个 key 的占用内存空间。

写入数据前查看内存占用情况：

![](i/4b14a848-6cbb-4bc3-8565-abe3ed03e7ee.png)

写入数据后查看内存占用情况：

![](i/849c7ce0-3830-49e8-8dc1-9187fd9a8f35.png)
![](i/55a6d87b-07df-417f-9ab7-2da26d69561d.png)




![](i/6333ef09-6c72-42ae-8f92-cc1c94b3088b.png)
![](i/13eb2caa-d366-41de-b448-8dd519726070.png)


![](i/60ce7489-76bd-4610-9dfa-b1fec5aefd30.png)
![](i/e7b37d4b-5bf3-439f-a3c7-c66588501d97.png)